const { MessageEmbed, MessageActionRow, MessageButton } = require("discord.js");

module.exports.run = async (client, interaction) => {
    const { channel } = interaction.options.get("salon") || interaction;
    if (!channel.isText()) return interaction.editReply(":x: Vous devez s√©lectionner un salon textuel comme salon o√π les tickets seront cr√©√©s");
    let embed = new MessageEmbed()
        .setTitle(`:pencil: Salon de support`)
        .setDescription(`Bienvenue dans le salon ${channel} !\nPour tout(e) **signalement, question, suggestion ou retrait de sanction**, vous pourrez cr√©er un ticket gr√¢ce aux boutons ci-dessous ou la commande **/ticket** disponible partout sur le serveur !\n\nVous avez la possibilit√© de cr√©er des tickets publiques ou priv√©s si ceux-ci sont disponibles sur le serveur ! Merci de choisir judicieusement la cat√©gorie ainsi que l'accessibilit√© sinon des sanctions pourraient √™tre envisag√©es !\nPar d√©faut, en utilisant les boutons les demandes cr√©√©s seront en priv√© pour les signalements et retraits de sanction et publique pour le reste.`)
        .setColor("BLUE");

    let row = new MessageActionRow()
        .addComponents(
            new MessageButton()
                .setCustomId("set-support_report")
                .setLabel("Ticket signalement")
                .setStyle("PRIMARY"),
            new MessageButton()
                .setCustomId("set-support_question")
                .setLabel("Question")
                .setStyle("PRIMARY"),
            new MessageButton()
                .setCustomId("set-support_suggest")
                .setLabel("Suggestion")
                .setStyle("PRIMARY"),
            new MessageButton()
                .setCustomId("set-support_sanction")
                .setLabel("Retrait de sanction")
                .setStyle("PRIMARY")
        );

    let guild = await client.getGuild(interaction.guild);
    guild.settings.supportChannel = channel.id;
    await client.updateGuild(interaction.guild, guild);
    channel.send({embeds: [embed], components: [row]});
    return interaction.editReply(`:white_check_mark: Salon de support d√©fini avec succ√®s !`);
};

module.exports.runButton = async (client, interaction) => {
    let splited = interaction.customId.split("_").slice(1);
    const guild = await client.getGuild(interaction.guild);
    switch (splited[0]) {
        case "suggest":
        case "question":
            var thread = await interaction.channel.threads.create({
                name: `${splited[0] === "question" ? "Question" : "Suggestion"} - ${interaction.user.tag}`,
                autoArchiveDuration: 1440
            });
            var embed = new MessageEmbed()
                .setTitle(`Ticket de support - ${splited[0] === "question" ? "Question" : "Suggestion"}`)
                .setDescription(`${interaction.user}, le ticket de support a bien √©t√© cr√©√© !\nMerci de formuler votre ${splited[0] === "question" ? "question" : "suggestion"} le plus pr√©cis√©ment possible afin qu'un membre du staff puisse vous aider !`)
                .setColor("BLUE");
            var row = new MessageActionRow()
                .addComponents(
                    new MessageButton()
                        .setCustomId(`set-support_close`)
                        .setLabel(`Fermer`)
                        .setStyle("DANGER")
                        .setEmoji("üîí")
                );
            return thread.send({content: `${interaction.user}${guild.settings.staffRoleID ? `, ${guild.settings.staffRoleID}` : ``}`,embeds: [embed], components: [row]});

        case "report":
        case "sanction":
            var thread = await interaction.channel.threads.create({
                name: `${splited[0] === "report" ? "Signalement" : "Retrait de sanction"} - ${interaction.user.tag}`,
                autoArchiveDuration: 1440,
                type: "GUILD_PRIVATE_THREAD"
            });
            var embed = new MessageEmbed()
                .setTitle(`Ticket de support - ${splited[0] === "report" ? "Signalement" : "Retrait de sanction"}`)
                .setColor("BLUE");

                if (splited[0] === "report") embed.setDescription(`${interaction.user}, le ticket de support a bien √©t√© cr√©√© !\nMerci de formuler votre signalement le plus pr√©cis√©ment possible afin qu'un membre du staff puisse vous aider !`);
                else embed.setDescription(`${interaction.user}, le ticket de support a bien √©t√© cr√©√© !\nMerci d'expliquer le plus pr√©cis√©mment possible pourquoi vous souhaitez que votre sanction soit lev√©e afin que votre demande soit trait√©e par le staff le plus facilement et rapidement possible !`);

            var row = new MessageActionRow()
                .addComponents(
                    new MessageButton()
                        .setCustomId(`set-support_close`)
                        .setLabel(`Fermer`)
                        .setStyle("DANGER")
                        .setEmoji("üîí")
                );
            return thread.send({content: `${interaction.user}${guild.settings.staffRoleID ? `, ${guild.settings.staffRoleID}` : ``}`,embeds: [embed], components: [row]});
        case "close": 
            if(!interaction.channel.isThread()) return;
            await interaction.channel.send(`Ticket archiv√© par ${interaction.user}`);
            interaction.channel.setArchived();
            interaction.editReply(":white_check_mark: Le ticket a √©t√© archiv√© !");
    };
    
    
};

module.exports.settings = {
    name: "set-support",
    ephemeral: true,
};